@{
    ViewData["Title"] = "Snow Report";
}

<div class="container my-5">
    <h1 class="text-center">Snow Report</h1>
    <p class="text-center">Select a Resort to view the latest snow conditions.</p>

    <!-- User will choose a resort, later a few could be shown automaticallyalso I want to move this to the home page potentially-->
    <div class="mb-3">
        <label for="resort-select" class="form-label">Choose a Resort:</label>
        <select id="resort-select" class="form-select">
            <option value="" disabled selected>Select a resort</option>
            <option value="Mt.Rose Ski Tahoe">Mt.Rose Ski Tahoe</option>
            <option value="Alta Ski Area">Alta Ski Area</option>
            <option value="Breckenridge, Colorado">Breckenridge, Colorado</option>
        </select>
    </div>

    <!-- Button to trigger API call -->
    <button id="get-report" class="btn btn-primary">Get Snow Report</button>

    <!-- Snow Report Display -->
    <div id="snow-report" class="mt-4"></div>
</div>

@section Scripts {
    <script>
        // Function to fetch snow report data for a given resort
        async function fetchSnowReport(resortName) {
            if (!resortName) {
                alert("Null Resort Name");
                return;
            }

            try {
                // Calls API to get the snow report
                const response = await fetch(`/SnowReport/Report?locationName=${resortName}`);
                if (response.ok) {
                    const report = await response.json();
                    // Update the page with the report
                    const snowReportDiv = document.getElementById("snow-report");
                    snowReportDiv.innerHTML = `
                        <h3>Snow Report for ${report.locationName}</h3>
                        <p>Temperature: ${report.temperature} Â°C</p>
                        <p>Description: ${report.weatherDescription}</p>
                        <p>Snowfall: ${report.snowfall} cm</p>
                    `;
                } else {
                    alert("Failed to get report");
                }
            } catch (error) {
                console.error("Error fetching snow report:", error);
                alert("An error occurred while fetching the snow report.");
            }
        }

        document.getElementById("get-report").addEventListener("click", function () {
            const resortName = document.getElementById("resort-select").value;
            fetchSnowReport(resortName);
        });

        // 
        document.addEventListener("DOMContentLoaded", function () {
            fetchSnowReport("Mt.Rose Ski Tahoe");

            // Dynamically updates every 30 seconds
            setInterval(function () {
                const resortName = document.getElementById("resort-select").value || "Mt.Rose Ski Tahoe";
                fetchSnowReport(resortName);
            }, 30000); 
        });
    </script>
}
